generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("SUPABASE_URL")
}

model Operation {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  type        String
  signal      Signal   @relation(fields: [signal_id], references: [id], onDelete: Cascade)
  signal_id   String   @unique
  value       Value    @relation(fields: [value_id], references: [id], onDelete: Cascade)
  value_id    String   @unique
  variable    Variable @relation(fields: [variable_id], references: [id], onDelete: Cascade)
  variable_id String
}

model Variable {
  id        String      @id @default(uuid())
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  name      String
  history   Operation[]
  actor     Actor       @relation(fields: [actor_id], references: [id], onDelete: Cascade)
  actor_id  String
  role      String
}

model Actor {
  id        String     @id @default(uuid())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  variables Variable[]
}

model Stimulus {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  signal    Signal   @relation(fields: [signal_id], references: [id], onDelete: Cascade)
  signal_id String
}

model Signal {
  id        String     @id @default(uuid())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  text      String
  stimuli   Stimulus[]
  value     Value      @relation(fields: [value_id], references: [id], onDelete: Cascade)
  value_id  String
  operation Operation?
}

model Value {
  id        String      @id @default(uuid())
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  signals   Signal[]
  Operation Operation[]
}
