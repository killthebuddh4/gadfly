generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("SUPABASE_CONN_STRING")
}

model Type {
  id         String   @id @default(uuid())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  value      String
  graph      Graph?
  node       Node?
  edge       Edge?
}

model Value {
  id         String   @id @default(uuid())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  value      String
  graph      Graph?
  node       Node?
  edge       Edge?
}

model Graph {
  id         String   @id @default(uuid())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  type       Type     @relation(fields: [type_id], references: [id])
  type_id    String   @unique
  value      Value    @relation(fields: [value_id], references: [id])
  value_id   String   @unique
  nodes      Node[]
}

model Node {
  id         String   @id @default(uuid())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  graph      Graph    @relation(fields: [graph_id], references: [id])
  graph_id   String
  type       Type     @relation(fields: [type_id], references: [id])
  type_id    String   @unique
  parents    Edge[]   @relation("edge_parent")
  children   Edge[]   @relation("edge_child")
  value      Value?   @relation(fields: [value_id], references: [id])
  value_id   String?  @unique
}

model Edge {
  id         String   @id @default(uuid())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  parent     Node     @relation("edge_parent", fields: [parent_id], references: [id])
  parent_id  String
  child      Node     @relation("edge_child", fields: [child_id], references: [id])
  child_id   String
  type       Type     @relation(fields: [type_id], references: [id])
  type_id    String   @unique
  value      Value    @relation(fields: [value_id], references: [id])
  value_id   String   @unique
}
